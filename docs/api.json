{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Spring Boot Utilities",
    "description": "My utilities.",
    "contact": {
      "name": "Kelvin Sidharta Sie",
      "email": "kelvinsidhartasie@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local development server"
    },
    {
      "url": "https://api.yourcompany.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Email Service",
      "description": "Operations related to sending emails with templates, attachments, and advanced features"
    },
    {
      "name": "Actuator",
      "description": "Spring Boot Actuator endpoints for monitoring and management"
    },
    {
      "name": "PDF Generator",
      "description": "Generate PDF from HTML/Thymeleaf templates and JSON data"
    }
  ],
  "paths": {
    "/api/utilities/mailer/send-email": {
      "post": {
        "tags": [
          "Email Service"
        ],
        "summary": "Send email with template and attachments",
        "description": "Sends an email using HTML templates with dynamic variables, supports multiple recipients (TO, CC, BCC), file attachments, priority settings, and automatic retry mechanism with rate limiting.",
        "operationId": "sendEmail",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "dto"
                ],
                "properties": {
                  "dto": {
                    "type": "string",
                    "description": "JSON string containing EmailDTO object",
                    "example": "{\"emailId\":\"unique-id-123\",\"emailType\":\"NOTIFICATION\",\"sender\":\"noreply@example.com\",\"receiver\":\"user@example.com\",\"subject\":\"Welcome Email\",\"templateName\":\"welcome_template\",\"params\":{\"userName\":\"John Doe\",\"year\":\"2025\"}}"
                  },
                  "files": {
                    "type": "array",
                    "description": "Optional array of file attachments",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              },
              "encoding": {
                "dto": {
                  "contentType": "application/json"
                },
                "files": {
                  "contentType": "application/octet-stream"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseV2Success"
                },
                "example": {
                  "error_schema": {
                    "status_code": "200",
                    "error_message": {
                      "indonesian": "Email berhasil dikirim",
                      "english": "Email sent successfully to user@example.com"
                    }
                  },
                  "output_schema": {
                    "request_id": "ceedcf10-0d0a-49be-ba4a-e7d2b6e06cc3",
                    "data": "Email sent successfully to user@example.com"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseV2Error"
                },
                "examples": {
                  "validationError": {
                    "summary": "Email validation failed",
                    "value": {
                      "error_schema": {
                        "status_code": "400",
                        "error_message": {
                          "indonesian": "Gagal mengirimkan email",
                          "english": "Fail to send email"
                        }
                      },
                      "output_schema": {
                        "request_id": "ceedcf10-0d0a-49be-ba4a-e7d2b6e06cc3",
                        "data": "Invalid sender email format"
                      }
                    }
                  },
                  "delayActive": {
                    "summary": "Email delay is still active",
                    "value": {
                      "error_schema": {
                        "status_code": "400",
                        "error_message": {
                          "indonesian": "Email tertunda",
                          "english": "Email delay is still active"
                        }
                      },
                      "output_schema": {
                        "request_id": "ceedcf10-0d0a-49be-ba4a-e7d2b6e06cc3",
                        "data": "Email delay is still active for email type: PROMOTIONAL"
                      }
                    }
                  },
                  "alreadySent": {
                    "summary": "Email already sent successfully",
                    "value": {
                      "error_schema": {
                        "status_code": "400",
                        "error_message": {
                          "indonesian": "Email sudah pernah dikirim",
                          "english": "Email already sent"
                        }
                      },
                      "output_schema": {
                        "request_id": "ceedcf10-0d0a-49be-ba4a-e7d2b6e06cc3",
                        "data": "Email already sent successfully before. Email id: unique-id-123"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseV2Error"
                },
                "example": {
                  "error_schema": {
                    "status_code": "500",
                    "error_message": {
                      "indonesian": "Terjadi kesalahan pada server",
                      "english": "Internal server error"
                    }
                  },
                  "output_schema": {
                    "request_id": "ceedcf10-0d0a-49be-ba4a-e7d2b6e06cc3",
                    "data": "Failed to send email: Connection timeout"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/actuator/refresh": {
      "post": {
        "tags": [
          "Actuator"
        ],
        "summary": "Refresh configuration",
        "description": "Refreshes all @RefreshScope beans and reloads configuration from CONFIG_SERVER table",
        "operationId": "refresh",
        "responses": {
          "200": {
            "description": "Configuration refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "emailHost",
                    "emailPort",
                    "emailDelayMap"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/utilities/pdf-generator/generate": {
      "post": {
        "tags": [
          "PDF Generator"
        ],
        "summary": "Generate PDF",
        "description": "Accepts a JSON body with `template` (HTML/Thymeleaf) and `data` (object) and returns PDF bytes (base64 string) wrapped in ApiResponseV2.",
        "operationId": "generatePdf",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "template"
                ],
                "properties": {
                  "template": {
                    "type": "string",
                    "description": "Thymeleaf HTML template string (can include expressions referencing `data` variable).",
                    "example": "<html><body><h1>Invoice for [[${data.customer}]]</h1><p>Amount: [[${data.amount}]]</p></body></html>"
                  },
                  "data": {
                    "type": "object",
                    "description": "Key-value data object available to the template as `data`.",
                    "additionalProperties": true,
                    "example": {
                      "customer": "John Doe",
                      "amount": "USD 100.00"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "PDF generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseV2"
                },
                "example": {
                  "error_schema": {
                    "status_code": "200",
                    "error_message": {
                      "indonesian": "PDF berhasil dibuat",
                      "english": "PDF generated successfully"
                    }
                  },
                  "output_schema": {
                    "request_id": "ceedcf10-0d0a-49be-ba4a-e7d2b6e06cc3",
                    "data": "JVBERi0xLjQKJcfs..."
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (e.g. missing template or invalid input)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseV2"
                },
                "example": {
                  "error_schema": {
                    "status_code": "400",
                    "error_message": {
                      "indonesian": "Input JSON tidak valid",
                      "english": "Invalid JSON input for PDF generator"
                    }
                  },
                  "output_schema": {
                    "request_id": "req-123",
                    "data": "Missing `template` in JSON input"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error during PDF generation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponseV2"
                },
                "example": {
                  "error_schema": {
                    "status_code": "500",
                    "error_message": {
                      "indonesian": "Terjadi kesalahan pada server",
                      "english": "Internal server error"
                    }
                  },
                  "output_schema": {
                    "request_id": "req-456",
                    "data": "Failed to generate PDF: iText renderer error"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EmailDTO": {
        "type": "object",
        "required": [
          "emailId",
          "emailType",
          "sender",
          "receiver",
          "subject"
        ],
        "properties": {
          "emailId": {
            "type": "string",
            "description": "Unique identifier for the email",
            "example": "unique-id-123"
          },
          "emailType": {
            "type": "string",
            "description": "Type of email for categorization and delay mechanism",
            "enum": [
              "NOTIFICATION",
              "NOTIFICATION_DELAY",
              "PROMOTIONAL",
              "MARKETING",
              "INVOICE",
              "ANNOUNCEMENT"
            ],
            "example": "NOTIFICATION"
          },
          "sender": {
            "type": "string",
            "format": "email",
            "description": "Sender email address",
            "example": "noreply@example.com"
          },
          "receiver": {
            "type": "string",
            "format": "email",
            "description": "Primary recipient email address (can be multiple separated by semicolon)",
            "example": "user@example.com"
          },
          "cc": {
            "type": "string",
            "description": "Carbon copy recipients (multiple emails separated by semicolon)",
            "example": "manager@example.com;director@example.com"
          },
          "bcc": {
            "type": "string",
            "description": "Blind carbon copy recipients (multiple emails separated by semicolon)",
            "example": "archive@example.com"
          },
          "subject": {
            "type": "string",
            "description": "Email subject line",
            "example": "Welcome to Our Platform!"
          },
          "templateName": {
            "type": "string",
            "description": "Template ID from EMAIL_TEMPLATE table (optional, uses default if not provided)",
            "example": "welcome_template"
          },
          "params": {
            "type": "object",
            "description": "Key-value pairs for template variable substitution",
            "additionalProperties": true,
            "example": {
              "userName": "John Doe",
              "year": "2025",
              "companyName": "ACME Corp"
            }
          },
          "priority": {
            "type": "string",
            "description": "Email priority (1=High, 3=Normal, 5=Low)",
            "enum": [
              "1",
              "3",
              "5"
            ],
            "example": "1"
          }
        }
      },
      "ApiResponseV2Success": {
        "type": "object",
        "properties": {
          "error_schema": {
            "type": "object",
            "properties": {
              "status_code": {
                "type": "string",
                "description": "HTTP status code",
                "example": "200"
              },
              "error_message": {
                "type": "object",
                "properties": {
                  "indonesian": {
                    "type": "string",
                    "description": "Success message in Indonesian",
                    "example": "Email berhasil dikirim"
                  },
                  "english": {
                    "type": "string",
                    "description": "Success message in English",
                    "example": "Email sent successfully to user@example.com"
                  }
                }
              }
            }
          },
          "output_schema": {
            "type": "object",
            "properties": {
              "request_id": {
                "type": "string",
                "description": "Unique trace ID for request tracking",
                "example": "ceedcf10-0d0a-49be-ba4a-e7d2b6e06cc3"
              },
              "data": {
                "type": "string",
                "description": "Response data or message",
                "example": "Email sent successfully to user@example.com"
              }
            }
          }
        }
      },
      "ApiResponseV2Error": {
        "type": "object",
        "properties": {
          "error_schema": {
            "type": "object",
            "properties": {
              "status_code": {
                "type": "string",
                "description": "HTTP status code",
                "example": "400"
              },
              "error_message": {
                "type": "object",
                "properties": {
                  "indonesian": {
                    "type": "string",
                    "description": "Error message in Indonesian",
                    "example": "Gagal mengirimkan email"
                  },
                  "english": {
                    "type": "string",
                    "description": "Error message in English",
                    "example": "Fail to send email"
                  }
                }
              }
            }
          },
          "output_schema": {
            "type": "object",
            "properties": {
              "request_id": {
                "type": "string",
                "description": "Unique trace ID for request tracking",
                "example": "ceedcf10-0d0a-49be-ba4a-e7d2b6e06cc3"
              },
              "data": {
                "type": "string",
                "description": "Error details or message",
                "example": "Invalid sender email format"
              }
            }
          }
        }
      },
      "ApiResponseV2": {
        "type": "object",
        "properties": {
          "error_schema": {
            "type": "object",
            "properties": {
              "status_code": {
                "type": "string"
              },
              "error_message": {
                "type": "object",
                "properties": {
                  "indonesian": {
                    "type": "string"
                  },
                  "english": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "output_schema": {
            "type": "object",
            "properties": {
              "request_id": {
                "type": "string"
              },
              "data": {
                "type": "string",
                "description": "Base64-encoded PDF bytes"
              }
            }
          }
        }
      }
    }
  }
}